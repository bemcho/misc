;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("armadillo_sandbox.hpp" include nil nil [1513 1545])
            ("armabox" type
               (:members 
                  ( ("plotDotProd" function
                       (:arguments 
                          ( ("randNX" variable (:type "int") (reparse-symbol arg-sub-list) [1599 1610])
                            ("randNY" variable (:type "int") (reparse-symbol arg-sub-list) [1610 1621])
                            ("plotName" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1622 1643]))                          
                        :type ("gnuploti::Gnuplot" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1569 1898]))                  
                :type "namespace")
                nil [1546 1900]))          
      :file "armadillo.cpp"
      :pointmax 1901
      :fsize 1900
      :lastmodtime '(22744 10397 917588 580000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("ARMADILLO_SANDBOX_HPP" variable (:constant-flag t) nil [40 61])
            ("cling_sandbox_base_includes.hpp" include nil nil [63 105])
            ("armadillo" include (:system-flag t) nil [106 126]))          
      :file "armadillo_sandbox.hpp"
      :pointmax 161
      :fsize 160
      :lastmodtime '(22743 63072 693771 242000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ARMADILLO_SANDBOX_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [220 240])
            ("gnuploti" using (:type ("gnuploti" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [241 266])
            ("A" variable
               (:default-value "5000"
                :type ("auto" type (:type "class") nil nil))
                nil [267 279])
            ("B" variable
               (:default-value "5000"
                :type ("auto" type (:type "class") nil nil))
                nil [280 292])
            ("g1" variable
               (:default-value "armabox::plotDotProd(A,B,\"Distribution\")"
                :type ("auto" type (:type "class") nil nil))
                nil [293 344])
            ("endl" variable (:type "int") nil [392 397])
            ("endl" variable (:type "int") nil [468 473])
            ("savetofigure" function
               (:prototype-flag t
                :type "int")
                nil [478 529])
            ("set_xrange" function
               (:prototype-flag t
                :type "int")
                nil [567 583])
            ("plot_equation" function
               (:prototype-flag t
                :type "int")
                nil [622 647])
            ("reset_all" function
               (:prototype-flag t
                :type "int")
                nil [651 663])
            ("g2" variable (:type ("Gnuplot" type (:type "class") nil nil)) nil [665 676])
            ("endl" variable (:type "int") nil [720 725])
            ("plot_x" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [736 738])
                    ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [738 741]))                  
                :type "int")
                nil [729 752])
            ("plot_x" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [776 778])
                    ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [778 781]))                  
                :type "int")
                nil [769 793])
            ("plot_x" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [825 827])
                    ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [827 830]))                  
                :type "int")
                nil [818 841])
            ("unset_smooth" function
               (:prototype-flag t
                :type "int")
                nil [845 860])
            ("g3" function
               (:prototype-flag t
                :type ("Gnuplot" type (:type "class") nil nil))
                nil [862 882])
            ("endl" variable (:type "int") nil [915 920])
            ("set_grid" function
               (:prototype-flag t
                :type "int")
                nil [924 935])
            ("plot_equation" function
               (:prototype-flag t
                :type "int")
                nil [939 976])
            ("g4" function
               (:prototype-flag t
                :type ("Gnuplot" type (:type "class") nil nil))
                nil [978 998])
            ("endl" variable (:type "int") nil [1036 1041])
            ("set_zrange" function
               (:prototype-flag t
                :type "int")
                nil [1045 1063])
            ("set_zlabel" function
               (:prototype-flag t
                :type "int")
                nil [1109 1130])
            ("plot_equation3d" function
               (:prototype-flag t
                :type "int")
                nil [1134 1161])
            ("g5" function
               (:prototype-flag t
                :type ("Gnuplot" type (:type "class") nil nil))
                nil [1163 1183])
            ("endl" variable (:type "int") nil [1227 1232])
            ("set_hidden3d" function
               (:prototype-flag t
                :type "int")
                nil [1255 1270])
            ("g6" function
               (:prototype-flag t
                :type ("Gnuplot" type (:type "class") nil nil))
                nil [1286 1306])
            ("endl" variable (:type "int") nil [1349 1354])
            ("set_contour" function
               (:prototype-flag t
                :type "int")
                nil [1377 1391])
            ("plot_equation3d" function
               (:prototype-flag t
                :type "int")
                nil [1411 1446])
            ("replot" function
               (:prototype-flag t
                :type "int")
                nil [1465 1474])
            ("g7" function
               (:prototype-flag t
                :type ("Gnuplot" type (:type "class") nil nil))
                nil [1476 1496])
            ("endl" variable (:type "int") nil [1532 1537])
            ("set_samples" function
               (:prototype-flag t
                :type "int")
                nil [1560 1576])
            ("plot_equation" function
               (:prototype-flag t
                :type "int")
                nil [1613 1648])
            ("replot" function
               (:prototype-flag t
                :type "int")
                nil [1670 1679])
            ("g8" function
               (:prototype-flag t
                :type ("Gnuplot" type (:type "class") nil nil))
                nil [1681 1708])
            ("endl" variable (:type "int") nil [1745 1750])
            ("set_xrange" function
               (:prototype-flag t
                :type "int")
                nil [1786 1803])
            ("plot_equation" function
               (:prototype-flag t
                :type "int")
                nil [1828 1852]))          
      :file "armadillo.cling"
      :pointmax 1853
      :fsize 1852
      :lastmodtime '(22760 56839 911183 130000)
      :unmatched-syntax '((string 1842 . 1850) (punctuation 1827 . 1828) (semantic-list 1820 . 1827) (symbol 1807 . 1820) (string 1821 . 1826) (punctuation 1806 . 1807) (symbol 1804 . 1806) (number 1800 . 1801) (number 1798 . 1799) (punctuation 1797 . 1798) (punctuation 1785 . 1786) (semantic-list 1764 . 1785) (symbol 1754 . 1764) (string 1765 . 1784) (punctuation 1753 . 1754) (symbol 1751 . 1753) (punctuation 1743 . 1744) (punctuation 1742 . 1743) (string 1717 . 1741) (punctuation 1715 . 1716) (punctuation 1714 . 1715) (symbol 1709 . 1713) (string 1692 . 1706) (punctuation 1669 . 1670) (semantic-list 1664 . 1669) (symbol 1653 . 1664) (number 1665 . 1668) (punctuation 1652 . 1653) (symbol 1650 . 1652) (string 1627 . 1646) (punctuation 1612 . 1613) (semantic-list 1593 . 1612) (symbol 1580 . 1593) (string 1594 . 1611) (punctuation 1579 . 1580) (symbol 1577 . 1579) (number 1572 . 1574) (punctuation 1559 . 1560) (semantic-list 1551 . 1559) (symbol 1541 . 1551) (number 1556 . 1558) (number 1553 . 1555) (punctuation 1552 . 1553) (punctuation 1540 . 1541) (symbol 1538 . 1540) (punctuation 1530 . 1531) (punctuation 1529 . 1530) (string 1505 . 1528) (punctuation 1503 . 1504) (punctuation 1502 . 1503) (symbol 1497 . 1501) (string 1487 . 1494) (punctuation 1464 . 1465) (semantic-list 1462 . 1464) (symbol 1451 . 1462) (punctuation 1450 . 1451) (symbol 1448 . 1450) (string 1427 . 1444) (punctuation 1410 . 1411) (semantic-list 1408 . 1410) (symbol 1395 . 1408) (punctuation 1394 . 1395) (symbol 1392 . 1394) (punctuation 1376 . 1377) (semantic-list 1372 . 1376) (symbol 1358 . 1372) (number 1373 . 1375) (punctuation 1357 . 1358) (symbol 1355 . 1357) (punctuation 1347 . 1348) (punctuation 1346 . 1347) (string 1315 . 1345) (punctuation 1313 . 1314) (punctuation 1312 . 1313) (symbol 1307 . 1311) (string 1297 . 1304) (punctuation 1283 . 1284) (semantic-list 1274 . 1283) (punctuation 1273 . 1274) (symbol 1271 . 1273) (punctuation 1254 . 1255) (semantic-list 1250 . 1254) (symbol 1236 . 1250) (number 1251 . 1253) (punctuation 1235 . 1236) (symbol 1233 . 1235) (punctuation 1225 . 1226) (punctuation 1224 . 1225) (string 1192 . 1223) (punctuation 1190 . 1191) (punctuation 1189 . 1190) (symbol 1184 . 1188) (string 1174 . 1181) (string 1150 . 1159) (punctuation 1133 . 1134) (symbol 1131 . 1133) (string 1120 . 1128) (punctuation 1108 . 1109) (semantic-list 1098 . 1108) (symbol 1088 . 1098) (string 1099 . 1107) (punctuation 1087 . 1088) (semantic-list 1077 . 1087) (symbol 1067 . 1077) (string 1078 . 1086) (punctuation 1066 . 1067) (symbol 1064 . 1066) (number 1058 . 1061) (number 1056 . 1057) (punctuation 1044 . 1045) (symbol 1042 . 1044) (punctuation 1034 . 1035) (punctuation 1033 . 1034) (string 1007 . 1032) (punctuation 1005 . 1006) (punctuation 1004 . 1005) (symbol 999 . 1003) (string 989 . 996) (string 964 . 974) (string 953 . 963) (punctuation 938 . 939) (symbol 936 . 938) (punctuation 923 . 924) (symbol 921 . 923) (punctuation 913 . 914) (punctuation 912 . 913) (string 891 . 911) (punctuation 889 . 890) (punctuation 888 . 889) (symbol 883 . 887) (string 873 . 880) (punctuation 844 . 845) (symbol 842 . 844) (string 831 . 839) (semantic-list 828 . 830) (punctuation 826 . 827) (punctuation 817 . 818) (semantic-list 807 . 817) (symbol 797 . 807) (string 808 . 816) (punctuation 796 . 797) (symbol 794 . 796) (string 782 . 791) (semantic-list 779 . 781) (punctuation 777 . 778) (punctuation 768 . 769) (semantic-list 766 . 768) (symbol 756 . 766) (punctuation 755 . 756) (symbol 753 . 755) (string 742 . 750) (semantic-list 739 . 741) (punctuation 737 . 738) (punctuation 728 . 729) (symbol 726 . 728) (punctuation 718 . 719) (punctuation 717 . 718) (string 685 . 716) (punctuation 683 . 684) (punctuation 682 . 683) (symbol 677 . 681) (punctuation 650 . 651) (symbol 648 . 650) (string 636 . 645) (punctuation 621 . 622) (semantic-list 600 . 621) (symbol 587 . 600) (string 601 . 620) (punctuation 586 . 587) (symbol 584 . 586) (number 580 . 581) (number 578 . 579) (punctuation 566 . 567) (semantic-list 563 . 566) (symbol 552 . 563) (punctuation 551 . 552) (semantic-list 542 . 551) (symbol 533 . 542) (string 543 . 550) (punctuation 532 . 533) (symbol 530 . 532) (string 509 . 527) (string 491 . 507) (punctuation 477 . 478) (symbol 475 . 477) (punctuation 466 . 467) (punctuation 465 . 466) (string 407 . 464) (punctuation 405 . 406) (punctuation 404 . 405) (symbol 399 . 403) (punctuation 390 . 391) (punctuation 389 . 390) (string 371 . 388) (punctuation 369 . 370) (punctuation 368 . 369) (symbol 363 . 367) (punctuation 361 . 362) (punctuation 360 . 361) (symbol 355 . 359) (punctuation 353 . 354) (punctuation 352 . 353) (symbol 347 . 351) (symbol 215 . 218) (punctuation 214 . 215) (symbol 205 . 214) (symbol 203 . 204) (punctuation 202 . 203) (punctuation 199 . 200) (symbol 182 . 199) (punctuation 181 . 182) (symbol 169 . 181) (punctuation 168 . 169) (symbol 160 . 168) (punctuation 159 . 160) (symbol 153 . 159) (punctuation 152 . 153) (symbol 148 . 152) (punctuation 147 . 148) (symbol 145 . 146) (punctuation 144 . 145) (punctuation 142 . 143) (symbol 135 . 142) (punctuation 134 . 135) (symbol 122 . 134) (punctuation 121 . 122) (symbol 113 . 121) (punctuation 112 . 113) (symbol 106 . 112) (punctuation 105 . 106) (symbol 101 . 105) (punctuation 100 . 101) (symbol 98 . 99) (punctuation 97 . 98) (punctuation 94 . 95) (symbol 91 . 94) (punctuation 90 . 91) (symbol 83 . 90) (punctuation 82 . 83) (symbol 77 . 82) (punctuation 76 . 77) (symbol 73 . 76) (punctuation 72 . 73) (symbol 70 . 71) (punctuation 69 . 70) (symbol 65 . 67) (punctuation 64 . 65) (symbol 52 . 64) (punctuation 51 . 52) (symbol 48 . 51) (punctuation 47 . 48) (symbol 42 . 47) (punctuation 41 . 42) (symbol 38 . 41) (punctuation 37 . 38) (symbol 35 . 36) (punctuation 34 . 35) (punctuation 32 . 33) (symbol 23 . 32) (punctuation 22 . 23) (symbol 15 . 22) (punctuation 14 . 15) (symbol 9 . 14) (punctuation 8 . 9) (symbol 5 . 8) (punctuation 4 . 5) (symbol 2 . 3) (punctuation 1 . 2))))
  :file "!home!bemcho!Projects!ClingSandbox!armadillo_sandbox!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
